spring.datasource.url=jdbc:mysql://localhost:3306/foodelivery?createDatabaseIfNotExist=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=toor

#spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto=update

# Gerando DDL apartir das classes de dominio
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=src/main/resources/ddl.sql

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL57Dialect

spring.jackson.serialization.fail-on-empty-beans=false
spring.jackson.deserialization.fail-on-unknown-properties=true
spring.jackson.deserialization.fail-on-ignored-properties=true

# Habilitando que seja lançado uma Exception ao tentar acessar uma URL inexistente
spring.mvc.throw-exception-if-no-handler-found=true
spring.resources.add-mappings=false

# Configuração da Pool de Conexão - Hikari
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=7
spring.datasource.hikari.idle-timeout=30000

spring.flyway.locations=classpath:db/migration,classpath:db/testdata


#Configurando tamanho máximo para arquivos recebidos
#spring.servlet.multipart.max-file-size=2048KB

# Caminho dinâmico para armazenar arquivos
food-delivery.storage.local.diretorio-fotos=/Users/danie/Documents/catalogo

#food-delivery.storage.s3.id-chave-acesso=
#food-delivery.storage.s3.id-chave-acesso-secreta=
food-delivery.storage.s3.bucket=food-delivery-daniel
food-delivery.storage.s3.regiao=us-east-2
food-delivery.storage.s3.diretorio-fotos=catalogo

food-delivery.storage.tipo=local


spring.mail.host=smtp.sendgrid.net
spring.mail.port=587
spring.mail.username=apikey
#spring.mail.password= 

food-delivery.email.remetente= Food Delivery <deliveryfood981@gmail.com>
spring.freemarker.settings.locale=pt_BR
food-delivery.email.impl=fake
food-delivery.email.sandbox.destinatario=danielqueirozak77@gmail.com
